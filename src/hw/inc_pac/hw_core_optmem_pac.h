#if !defined(INCLUDED_hw_core_optmem_pac_h)
#define INCLUDED_hw_core_optmem_pac_h
/* ============================================================ */
/* ファイル名 : hw_core_optmem_pac.h                            */
/* 機能       : オプション設定メモリ定義                        */
/* ============================================================ */

/* ============================================================ */
/* インクルード                                                 */
/* ============================================================ */
/* プロジェクト共通 */
#include "prj_cmn_option.h"
#include "prj_cmn_type.h"
#include "prj_cmn_macro.h"

/* カテゴリ共通 */
#include "hw_cmn_option.h"
#include "hw_cmn_option_pac.h"

/* 個別 */

/* 本体 */


/* ============================================================ */
/* マクロ定数定義                                               */
/* ============================================================ */


/* ============================================================ */
/* 型定義                                                       */
/* ============================================================ */
/* レジスタはリトルエンディアンのため bit_order=rightとして下位ビットから順に記述する方式とする */
/* レジスタのアライメントはメンバーのデータサイズに応じるためunpackとする */
#pragma bit_order right
#pragma unpack

/* エンディアン選択レジスタS */
typedef union {
  struct {
    U4 b3MDE   :3;   /* R:エンディアン選択ビット */
    U4 b29Fix0 :29;  /* R:固定(全ビット1固定) */
  } stBit;
  U4 u4Val;
} ST_MDES;

/* オプション機能選択レジスタ0 */
typedef union {
  struct {
    U4 b1Fix0        :1;   /* R:固定(全ビット1固定) */
    U4 b1IWDTSTRT    :1;   /* R:IWDTスタートモード選択ビット */
    U4 b2IWDTTOPS    :2;   /* R:IWDTタイムアウト期間選択ビット */
    U4 b4IWDTCKS     :4;   /* R:IWDTクロック分周比選択ビット */
    U4 b2IWDTRPES    :2;   /* R:IWDTウィンドウ終了位置選択ビット */
    U4 b2IWDTRPSS    :2;   /* R:IWDTウィンドウ開始位置選択ビット */
    U4 b1IWDTRSTIRQS :1;   /* R:IWDTリセット割り込み要求選択ビット */
    U4 b1Fix1        :1;   /* R:固定(全ビット1固定) */
    U4 b1IWDTSLCSTP  :1;   /* R:IWDTスリープモードカウント停止制御ビット */
    U4 b2Fix2        :2;   /* R:固定(全ビット1固定) */
    U4 b1IWDTSTRT    :1;   /* R:WDTスタートモード選択ビット */
    U4 b2WDTTOPS     :2;   /* R:WDTタイムアウト期間選択ビット */
    U4 b4WDTCKS      :4;   /* R:WDTクロック分周比選択ビット */
    U4 b2WDTRPES     :2;   /* R:WDTウィンドウ終了位置選択ビット */
    U4 b2WDTRPSS     :2;   /* R:WDTウィンドウ開始位置選択ビット */
    U4 b1WDTRSTIRQS  :1;   /* R:WDTリセット割り込み要求選択ビット */
    U4 b3Fix3        :3;   /* R:固定(全ビット1固定) */
  } stBit;
  U4 u4Val;
} ST_OFS0;

/* オプション機能選択レジスタ1 */
typedef union {
  struct {
    U4 b2Fix0   :2;   /* R:固定(全ビット1固定) */
    U4 b1LVDAS  :1;   /* R:電圧検出0回路起動ビット */
    U4 b5Fix1   :5;   /* R:固定(全ビット1固定) */
    U4 b1HOCOEN :1;   /* R:HOCO発振有効ビット */
    U4 b23Fix2  :23;  /* R:固定(全ビット1固定) */
  } stBit;
  U4 u4Val;
} ST_OFS1;

/* ビットオーダー/アライメントをコンパイラオプションの設定に戻す */
#pragma bit_order
#pragma packoption


/* ============================================================ */
/* 関数プロトタイプ宣言(extern)                                 */
/* ============================================================ */


/* ============================================================ */
/* 変数宣言(extern)                                             */
/* ============================================================ */


/* ============================================================ */
/* const変数宣言(extern)                                        */
/* ============================================================ */
/* Memo:ROM上に配置されているレジスタ */
extern volatile const ST_MDES __evenaccess CST_RegMDES;
extern volatile const ST_OFS1 __evenaccess CST_RegOFS1;
extern volatile const ST_OFS0 __evenaccess CST_RegOFS0;


/* ============================================================ */
/* 関数形式マクロ定義                                           */
/* ============================================================ */


#endif
