#if !defined(INCLUDED_hw_drv_raysens_h)
#define INCLUDED_hw_drv_raysens_h
/* ============================================================ */
/* ファイル名 : hw_drv_raysens.h                                */
/* 機能       : 光学センサ処理                                  */
/* ============================================================ */

/* ============================================================ */
/* インクルード                                                 */
/* ============================================================ */
/* プロジェクト共通 */
#include "prj_cmn_option.h"
#include "prj_cmn_type.h"
#include "prj_cmn_macro.h"

/* カテゴリ共通 */
#include "hw_cmn_option.h"

/* 個別 */

/* 本体 */


/* ============================================================ */
/* マクロ定数定義                                               */
/* ============================================================ */
/* センサ数 */
#define CU1_HwDrv_RaySens_IdNum  ((U1)4)


/* ============================================================ */
/* 型定義                                                       */
/* ============================================================ */
/* センサ識別番号 */
typedef enum {
  CEN_HwDrv_RaySens_Id_R = 0,  /* 右側センサ */
  CEN_HwDrv_RaySens_Id_FR,     /* 前方右側センサ */
  CEN_HwDrv_RaySens_Id_FL,     /* 前方左側センサ */
  CEN_HwDrv_RaySens_Id_L,      /* 左側センサ */
} EN_HwDrv_RaySens_Id;


/* ============================================================ */
/* 関数プロトタイプ宣言(extern)                                 */
/* ============================================================ */
extern VD FnVD_HwDrv_RaySens_init(VD);
extern VD FnVD_HwDrv_RaySens_renewVal(EN_HwDrv_RaySens_Id tenId);
extern U2 FnU2_HwDrv_RaySens_getVal(EN_HwDrv_RaySens_Id tenId);


/* ============================================================ */
/* 変数宣言(extern)                                             */
/* ============================================================ */


/* ============================================================ */
/* const変数宣言(extern)                                        */
/* ============================================================ */


/* ============================================================ */
/* 関数形式マクロ定義                                           */
/* ============================================================ */


#endif
